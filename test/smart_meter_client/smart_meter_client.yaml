esphome:
  name: smartmeterclient
  on_boot:
    # Init digital outputs at a early stage
    priority: 400
    then:
      - lambda: |-
          // Enable 5V output voltage, otherwise 1.7V at MAX 13487E
          id(cgq5VPower_en).turn_on();
          // # MAX 13487E - endable AutoDirection circuit
          id(rs485_en).turn_on();
          // # MAX 13487E - disable shutdown
          id(rs485_se).turn_on();
          ESP_LOGI("sm", "RS485 initialized.");

esp32:
  board: esp32dev
  framework:
    type: arduino

preferences:
  flash_write_interval: 28d

# Enable logging
logger:
  level: DEBUG

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  # 192.168.4.1
  ap:
    ssid: "Sm-Client Fallback Hotspot"
    password: !secret ap_password

captive_portal:
    
web_server:
  port: 80

uart:
  id: uart_modbus
  tx_pin: 22
  rx_pin: 21
  baud_rate: 115200
  stop_bits: 1
  rx_buffer_size: 1024
  debug:
    direction: BOTH
    dummy_receiver: false
    # after:
    #   delimiter: "\n"
    sequence:
      - lambda: UARTDebug::log_string(direction, bytes);
 
modbus:
  id: modbus_client
  uart_id: uart_modbus

modbus_controller:
  - id: modbus_client_ctrl
    address: 240
    modbus_id: modbus_client
  #  setup_priority: -10
    update_interval: "5s"
  #  command_throttle: ${query_throttle}

output:
# to enable RS485 chip and 5V power
  - platform: gpio
    pin: 16
    id: cgq5VPower_en
  - platform: gpio
    pin: 17
    id: rs485_en
  - platform: gpio
    pin: 19
    id: rs485_se

sensor:
  - platform: modbus_controller
    modbus_controller_id: modbus_client_ctrl
    name: "Read-Test1"
    id: read_test1
    register_type: holding
    address: 40020
    register_count: 5
    value_type: U_WORD
    lambda: |-
        for (auto val : data) {
          ESP_LOGI("smc","data=0x%02x", val);
        }
        return x ;

  - platform: wifi_signal
    name: "5.0 WiFi Signal St√§rke"
    update_interval: 3s
    filters:
      - median:
          window_size: 5
          send_every: 3
          send_first_at: 1
